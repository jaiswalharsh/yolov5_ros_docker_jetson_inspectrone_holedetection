ARG BASE_IMAGE=nvcr.io/nvidia/l4t-ml:r32.5.0-py3

# ARG BASE_IMAGE=nvcr.io/nvidia/l4t-ml:r32.7.1-py3
FROM ${BASE_IMAGE}

ENV LANG C.UTF-8

ARG ROS_PKG=ros_base
ENV ROS_DISTRO=noetic
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}
ENV ROS_PYTHON_VERSION=3
ARG PYTHON3_VERSION=3.8

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /workspace

#
# add the ROS deb repo to the apt sources list
#
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
          git \
		cmake \
		build-essential \
		curl \
		wget \
		gnupg2 \
		lsb-release \
		ca-certificates \
    && rm -rf /var/lib/apt/lists/*

RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -


#
# install bootstrap dependencies
#
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
          libpython3-dev \
          python3-rosdep \
          python3-rosinstall-generator \
          python3-vcstool \
          build-essential && \
    rosdep init && \
    rosdep update && \
    rm -rf /var/lib/apt/lists/*

#
# download/build the ROS source
#
RUN apt-get update && \
    mkdir ros_catkin_ws && \
    cd ros_catkin_ws && \
    rosinstall_generator ${ROS_PKG} vision_msgs --rosdistro ${ROS_DISTRO} --deps --tar > ${ROS_DISTRO}-${ROS_PKG}.rosinstall && \
    mkdir src

RUN cd ros_catkin_ws && \ 
    vcs import --input ${ROS_DISTRO}-${ROS_PKG}.rosinstall ./src

RUN apt-get update && \
    cd ros_catkin_ws && \
    rosdep install --from-paths ./src --ignore-packages-from-source --rosdistro ${ROS_DISTRO} --skip-keys python3-pykdl -y && \
    python3 ./src/catkin/bin/catkin_make_isolated --install --install-space ${ROS_ROOT} -DCMAKE_BUILD_TYPE=Release && \
    rm -rf /var/lib/apt/lists/*

#########################################
COPY yolov5/ yolov5/
COPY requirements_jetson.txt yolov5/requirements_jetson.txt

WORKDIR /workspace/yolov5
RUN apt-get update -y && \
    pip3 install -r requirements_jetson.txt
WORKDIR /workspace

RUN pip3 install scikit-image
RUN . /opt/ros/noetic/setup.sh && \
    mkdir -p catkin_ws/src && \
    cd catkin_ws/src && \
    catkin_init_workspace

COPY ros_pytorch_yolov5/ catkin_ws/src/ros_pytorch_yolov5

#TODO: copy cv_bridge modified package from host machine instead of modyfing in Dockerfile
RUN cd catkin_ws/src && \
    git clone -b noetic https://github.com/ros-perception/vision_opencv && \
    sed -i 's/python37/python3/g' vision_opencv/cv_bridge/CMakeLists.txt

COPY inspectrone_msgs/ /workspace/catkin_ws/src/inspectrone_msgs

RUN . /opt/ros/noetic/setup.sh && \
    cd catkin_ws && \
    catkin_make

#
# setup entrypoint
#
COPY ./ros_entrypoint.sh /ros_entrypoint.sh
RUN echo 'source /opt/ros/${ROS_DISTRO}/setup.bash' >> /root/.bashrc
RUN echo "source /workspace/catkin_ws/devel/setup.bash" >> /root/.bashrc
ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]

# RUN mkdir docker_yolov5 && \
#     cd docker_yolov5/ && \
#     git clone https://github.com/ultralytics/yolov5.git && \
#     cd yolov5 && \
#     git checkout 91547edec1a33121b3607e8c946e051514182b4f && \
#     cd .. && \
#     mv yolov5/ standard && \
#     mkdir pytorch_hub


